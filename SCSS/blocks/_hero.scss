@use "../breakpoints" as breakpoints;
@use "../colors" as colors;

// both pseudo-elemets almost share the same styling, therefore mixin is a good option
@mixin afterElement(){
  content: "";
  background-color: colors.$light-green;
  height: 0.6rem;
  width: 100%;
  position: absolute;
  bottom: 0;
  left: 0;
}
// Mobile
.hero{
  position: relative;
  &::after{
    content: url('/assets/images/rings.png');
    position: absolute;
    top: 0;
    left: -50%;
    z-index: -1;
  };
  display: grid;
  grid-template-columns: 1fr;
  gap: 4rem;
  text-align: center;
  padding: 0 0 6.5rem 0;
  .img_wrapper{
    grid-area: 1 / 1 / 2 / 2;
    display: flex;
    justify-content: center;
    position: relative;
    overflow-x: hidden;
    &::after{
      content: " ";
      width: 12.9rem;
      height: 12.9rem;
      border-radius: 50%;
      position: absolute;
      right: -6.4rem;
      bottom: 0;
    }
    img{
     width: 46.4%;
     aspect-ratio: 174/242;
     object-fit: cover;
     background-color: rgba(42, 41, 41, 0.221);
     backdrop-filter: blur(1px);
    }
  }
  .description_wrapper{
    grid-area: 2 / 1 / 3 / 2;
    margin-inline: 4vw;  
    h2{
      padding-top: 4.9rem;
      span:nth-child(2){
        position: relative;
      &::after{
        @include afterElement();
    }
    }
    }
    p{
      padding: 2.4rem 2vw;
    }
    button{
      position: relative;
      letter-spacing: 2.3px;
      cursor: pointer;
      transition: 0.2s;
      &:hover{
        color: colors.$light-green;
      }
      &::after{
        @include afterElement();
        height: 2px;
        bottom: -1rem;
    }
    }
  }
 
}

// Tablet
@include breakpoints.responsive(breakpoints.$tablet){
  .hero{
    grid-template-columns: 58% 8% 34%;
    gap: 0;
    background-position: left 0 top 6.8rem;
    &::after{
    top: 4.2rem;
    left: -20%;
  };
  .img_wrapper{
    grid-area: 1 / 2 / 2 / 4;
    img{
     width: 100%;
    }
  }
  .description_wrapper{
    grid-area: 1 / 1 / 2 / 3;  
    text-align: start;
    z-index: 1;
    padding: 6.5rem 0 0 0;
    h2{
      & span:nth-child(1){
        display: flex;
        flex-direction: row;
      }
    }
    p{
      padding: 4.3rem 8.3rem 6.6rem 0;
    }
    }
  }
}

// Desktop
@include breakpoints.responsive(breakpoints.$desktop){
  .hero{
    grid-template-columns: 54% 15% 31%;
    padding-bottom: 8rem;
    margin-inline: 12%;
    background-position: left 0 top 6.8rem;
    position: static;
    &::after{
    top: 12.5rem;
    left: -13%;
  };
  .img_wrapper{
    grid-area: 1 / 2 / 2 / 4;
    overflow-x: visible;
    width: 444px;
    padding-top: 118px;
    height: 720px;
    background-color: colors.$dark-gray;
    position: absolute;
    top: 0;
    right: 14%;
     &::after{
      content: " ";
    
      width: 12.9rem;
      height: 12.9rem;
      border-radius: 50%;
      position: absolute;
      left: -6.4rem;
      bottom: 12rem;
      z-index: 10;
    }
  }
  .description_wrapper{
    margin: 0;
    min-height: 618px;
    grid-area: 1 / 1 / 2 / 3;  
    h2{
      & span:nth-child(1){
        display: contents;
      }
    }  
    p{
      padding-right: 24rem;
    }
  }
  }
}
